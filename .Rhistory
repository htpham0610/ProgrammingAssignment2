q()
source("test.R")
getwd()
setwd("C:/Hai/Courses/DataScience/R/ProgrammingAssignment2")
getwd()
source cachematrix.R
source ("cachematrix.R")
x <- cachematrix(rnorm(16), nrow=4)
x <- matrix(rnorm(16), nrow=4)
x
cx <- makeCacheMatrix(x)
cx
cx$get()
cacheSolve(cx)
x
cacheSolve(cx)
cx
library("dataset")
library(datasets)
data(iris)
?iris
iris
x <- list (a =1:5, b=rnorm(10))
x
tapply(iris,iris$speies)
summary(iris)
mean(iris)
f <- gl(3,10)
f
nrow(iris)
ncol(x)
ncol(iris)
iris[[virginia]]
iris[[virginica]]
apply(iris.x, 2, function(x) tapply(x, iris.s, mean))
apply(iris.x, 2, function(x) tapply(x, iris.s, mean))
iris.x <- subset(iris, select= -Species)
iris.y <- subset(iris, select= -Species)
apply(iris.x, 2, function(x) tapply(x, iris.s, mean))
apply(iris.x, 2, function(x) tapply(x, iris.y, mean))
iris.x <- subset(iris, select= -Species)
aggregate(iris.x, iris.y, mean)
do.call("rbind", as.list(
  by(iris, list(Species=iris$Species), function(x){
    y <- subset(x, select= -Species)
    apply(y, 2, mean)
  }
)))
    y <- subset(x, select= -Species)
apply(iris.x, 2, function(x) tapply(x, iris.y, mean))
do.call("rbind", as.list(
  by(iris, list(Species=iris$Species), function(x){
    y <- subset(x, select= -Species)
    apply(y, 2, mean)
  }
)))
iris.x <- subset(iris, select= -Species)
iris.s <- subset(iris, select= Species)
aggregate(iris.x, iris.s, mean)
apply(iris.x, 2, function(x) tapply(x, iris.s, mean))
rowMean(iris[,1:4])
rowMeans(iris[,1:4])
colMeans(iris)
apply(iris[,1:4], 2 mean)
apply(iris[,1:4], 2,mean)
apply(iris[,1:4], 1,mean)
apply(iris[,1:4], 2,mean)
library(datasets)
data(mtcars)
?mtcars
?mtcars
mtcars
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
apply(mtcars,2, mean)
with(mtcars, tapply(mpg,syl, mean))
with(mtcars, tapply(mpg,cyl, mean))
with(mtcars, tapply(hp,cyl, mean))
zz <- with(mtcars, tapply(hp,cyl, mean))
zz
abs(zz$4 - zz$8)
xx[,1]
zz[,1]
zz[1]
zz[3]
abs(zz[1]-zz[3])
abs(zz[4]-zz[3])
abs(zz[1]-zz[3])
zz <- with(mtcars, tapply(hp,cyl, mean))
zz
abs(zz[1]-zz[3])
exit
quit()
